#getting grayscale
megray<-grayscale(image)
plot(megray,axes=FALSE)
#single value decomposition
svd1<-svd(scale(megray))
str(svd1)
#plotting to see variance explained
plot(svd1$d^2/sum(svd1$d^2),pch=19,xlab="Singular vector",ylab="Variance explained")
#reducing the size/vectors hence the size
approx5<-svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
approx10<-svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10])
approx25<-svd1$u[,1:25] %*% diag(svd1$d[1:25]) %*% t(svd1$v[,1:25])
par(mfrow=c(2,2),mar=c(1,1,1,1))
size(image)
dim(image)
#plotting for reduced images
plot(as.cimg(approx5),main="(a) 5 vectors",axes=FALSE)
plot(as.cimg(approx10),main="(b) 10 vectors",axes=FALSE)
plot(as.cimg(approx25),main="(c) 25 vectors",axes=FALSE)
plot(as.cimg(megray),main="(d) full image",axes=FALSE)
png("5_vectors.png")
image(approx5,main="(a)")
dev.off()
png("25_vectors.png")
image(approx25)
dev.off()
png("full_image.png")
image(me)
dev.off()
setwd("C:\\Users\\himank\\Documents\\R\\myimagereduction")
library(imager)
image<-load.image("flower.jpg")
plot(image)
svd1<-svd(scale(grayscale(image)))
plot(svd1$d^2/sum(svd1$d^2))
R = image[,,1]
G = image[,,2]
B = image[,,3]
cscale <- function(v) rgb(v,0,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE)
cscale <- function(v) rgb(0,v,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE)
cscale <- function(v) rgb(0,0,v)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE)
svdR<-svd(R)
svdG<-svd(G)
svdB<-svd(B)
svdRGB<-list(svdR,svdG,svdB)
par(mfrow=c(2,2))
for(j in c(5,10,25,50)){
comp <- sapply(svdRGB, function(i){
compressed = i$u[,1:j] %*% diag(i$d[1:j]) %*% t(i$v[,1:j])
}, simplify = 'array')
comp<-as.cimg(comp)
plot(comp)
}
rm(list=ls())
setwd("C:\\Users\\himank\\Documents\\R\\myimagereduction")
library(imager)
par(mfrow=c(1,1))
image<-load.image("flower.jpg")
plot(image,axes=FALSE)
#getting grayscale
megray<-grayscale(image)
plot(megray,axes=FALSE)
#single value decomposition
svd1<-svd(scale(megray))
str(svd1)
#plotting to see variance explained
plot(svd1$d^2/sum(svd1$d^2),pch=19,xlab="Singular vector",ylab="Variance explained")
#reducing the size/vectors hence the size
approx5<-svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
approx10<-svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10])
approx25<-svd1$u[,1:25] %*% diag(svd1$d[1:25]) %*% t(svd1$v[,1:25])
par(mfrow=c(2,2),mar=c(1,1,1,1))
size(image)
dim(image)
#plotting for reduced images
plot(as.cimg(approx5),main="(a) 5 vectors",axes=FALSE)
plot(as.cimg(approx10),main="(b) 10 vectors",axes=FALSE)
plot(as.cimg(approx25),main="(c) 25 vectors",axes=FALSE)
plot(as.cimg(megray),main="(d) full image",axes=FALSE)
png("5_vectors.png")
plot(as.cimg(approx5))
dev.off()
png("10_vectors.png")
plot(as.cimg(approx10))
png("25_vectors.png")
plot(as.cimg(approx25))
dev.off()
approx10<-svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10])
plot(as.cimg(approx10))
setwd("C:\\Users\\himank\\Documents\\R\\myimagereduction")
library(imager)
par(mfrow=c(1,1))
image<-load.image("flower.jpg")
plot(image,axes=FALSE)
#getting grayscale
megray<-grayscale(image)
plot(megray,axes=FALSE)
#single value decomposition
svd1<-svd(scale(megray))
str(svd1)
#plotting to see variance explained
plot(svd1$d^2/sum(svd1$d^2),pch=19,xlab="Singular vector",ylab="Variance explained")
#reducing the size/vectors hence the size
approx5<-svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
approx10<-svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10])
approx25<-svd1$u[,1:25] %*% diag(svd1$d[1:25]) %*% t(svd1$v[,1:25])
par(mfrow=c(2,2),mar=c(1,1,1,1))
size(image)
dim(image)
#plotting for reduced images
plot(as.cimg(approx5),main="(a) 5 vectors",axes=FALSE)
plot(as.cimg(approx10),main="(b) 10 vectors",axes=FALSE)
plot(as.cimg(approx25),main="(c) 25 vectors",axes=FALSE)
plot(as.cimg(megray),main="(d) full image",axes=FALSE)
png("5_vectors.png")
plot(as.cimg(approx5))
dev.off()
png("10_vectors.png")
plot(as.cimg(approx10))
dev.off()
png("25_vectors.png")
plot(as.cimg(approx25))
dev.off()
png("10_vectors.png")
setwd("C:\\Users\\himank\\Documents\\R\\myimagereduction")
library(imager)
par(mfrow=c(1,1))
image<-load.image("flower.jpg")
plot(image,axes=FALSE)
#getting grayscale
megray<-grayscale(image)
plot(megray,axes=FALSE)
#single value decomposition
svd1<-svd(scale(megray))
str(svd1)
#plotting to see variance explained
plot(svd1$d^2/sum(svd1$d^2),pch=19,xlab="Singular vector",ylab="Variance explained")
#reducing the size/vectors hence the size
approx5<-svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
approx10<-svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10])
approx25<-svd1$u[,1:25] %*% diag(svd1$d[1:25]) %*% t(svd1$v[,1:25])
par(mfrow=c(2,2),mar=c(1,1,1,1))
#plotting for reduced images
plot(as.cimg(approx5),main="(a) 5 vectors",axes=FALSE)
plot(as.cimg(approx10),main="(b) 10 vectors",axes=FALSE)
plot(as.cimg(approx25),main="(c) 25 vectors",axes=FALSE)
plot(as.cimg(megray),main="(d) full image",axes=FALSE)
png("5_vectors.png")
plot(as.cimg(approx5),axes=FALSE)
dev.off()
png("10_vectors.png")
plot(as.cimg(approx10),axes=FALSE)
dev.off()
png("25_vectors.png")
plot(as.cimg(approx25),axes=FALSE)
dev.off()
dev.off()
setwd("C:\\Users\\himank\\Documents\\R\\myimagereduction")
library(imager)
image<-load.image("flower.jpg")
plot(image)
svd1<-svd(scale(grayscale(image)))
plot(svd1$d^2/sum(svd1$d^2))
R = image[,,1]
G = image[,,2]
B = image[,,3]
cscale <- function(v) rgb(v,0,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE)
cscale <- function(v) rgb(0,v,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE)
cscale <- function(v) rgb(0,0,v)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE)
svdR<-svd(R)
svdG<-svd(G)
svdB<-svd(B)
svdRGB<-list(svdR,svdG,svdB)
par(mfrow=c(2,2))
for(j in c(5,10,25,50)){
comp <- sapply(svdRGB, function(i){
compressed = i$u[,1:j] %*% diag(i$d[1:j]) %*% t(i$v[,1:j])
}, simplify = 'array')
comp<-as.cimg(comp)
plot(comp)
}
png("red.jpg")
cscale <- function(v) rgb(v,0,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE)
dev.off()
png("green.jpg")
cscale <- function(v) rgb(0,v,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE)
dev.off()
png("blue.jpg")
cscale <- function(v) rgb(0,0,v)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE)
dev.off()
setwd("C:\\Users\\himank\\Documents\\R\\myimagereduction")
library(imager)
image<-load.image("flower.jpg")
plot(image,axes=FALSE)
svd1<-svd(scale(grayscale(image)))
plot(svd1$d^2/sum(svd1$d^2))
R = image[,,1]
G = image[,,2]
B = image[,,3]
cscale <- function(v) rgb(v,0,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
cscale <- function(v) rgb(0,v,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
cscale <- function(v) rgb(0,0,v)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
svdR<-svd(R)
svdG<-svd(G)
svdB<-svd(B)
svdRGB<-list(svdR,svdG,svdB)
par(mfrow=c(2,2),mar=c(1,1,1,1))
for(j in c(5,10,25,50)){
comp <- sapply(svdRGB, function(i){
compressed = i$u[,1:j] %*% diag(i$d[1:j]) %*% t(i$v[,1:j])
}, simplify = 'array')
comp<-as.cimg(comp)
plot(comp)
}
png("red.jpg")
cscale <- function(v) rgb(v,0,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
dev.off()
png("green.jpg")
cscale <- function(v) rgb(0,v,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
dev.off()
png("blue.jpg")
cscale <- function(v) rgb(0,0,v)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
dev.off()
image<-load.image("flower.jpg")
plot(image,axes=FALSE)
plot(mfrow=c(1,1))
plot(image,axes=FALSE)
par(mfrow=c(1,1))
plot(image,axes=FALSE)
svd1<-svd(scale(grayscale(image)))
plot(svd1$d^2/sum(svd1$d^2))
R = image[,,1]
par(mar=c(1,1,1,1))
plot(svd1$d^2/sum(svd1$d^2),axes=TRUE)
image<-load.image("flower.jpg")
par(mfrow=c(1,1))
par(mar=c(4,4,4,4))
plot(svd1$d^2/sum(svd1$d^2),axes=TRUE)
setwd("C:\\Users\\himank\\Documents\\R\\myimagereduction")
library(imager)
image<-load.image("flower.jpg")
par(mfrow=c(1,1))
plot(image,axes=FALSE)
svd1<-svd(scale(grayscale(image)))
dev.off()
plot(svd1$d^2/sum(svd1$d^2),axes=TRUE)
R = image[,,1]
G = image[,,2]
B = image[,,3]
par(mfrow=c(1,3),mar=c(1,1,1,1))
cscale <- function(v) rgb(v,0,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
cscale <- function(v) rgb(0,v,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
cscale <- function(v) rgb(0,0,v)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
svdR<-svd(R)
svdG<-svd(G)
svdB<-svd(B)
svdRGB<-list(svdR,svdG,svdB)
par(mfrow=c(2,2),mar=c(1,1,1,1))
for(j in c(5,10,25,50)){
comp <- sapply(svdRGB, function(i){
compressed = i$u[,1:j] %*% diag(i$d[1:j]) %*% t(i$v[,1:j])
}, simplify = 'array')
comp<-as.cimg(comp)
plot(comp)
}
png("red.jpg")
cscale <- function(v) rgb(v,0,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
dev.off()
png("green.jpg")
cscale <- function(v) rgb(0,v,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
dev.off()
png("blue.jpg")
cscale <- function(v) rgb(0,0,v)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
dev.off()
setwd("C:\\Users\\himank\\Documents\\R\\myimagereduction")
library(imager)
image<-load.image("flower.jpg")
par(mfrow=c(1,1))
plot(image,axes=FALSE)
svd1<-svd(scale(grayscale(image)))
dev.off()
plot(svd1$d^2/sum(svd1$d^2),axes=TRUE)
R = image[,,1]
G = image[,,2]
B = image[,,3]
par(mfrow=c(1,3),mar=c(1,1,1,1))
cscale <- function(v) rgb(v,0,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
cscale <- function(v) rgb(0,v,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
cscale <- function(v) rgb(0,0,v)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
svdR<-svd(R)
svdG<-svd(G)
svdB<-svd(B)
svdRGB<-list(svdR,svdG,svdB)
par(mfrow=c(2,2),mar=c(1,1,1,1))
for(j in c(5,10,25,50)){
comp <- sapply(svdRGB, function(i){
compressed = i$u[,1:j] %*% diag(i$d[1:j]) %*% t(i$v[,1:j])
}, simplify = 'array')
comp<-as.cimg(comp)
plot(comp,axes=FALSE)
}
png("red.jpg")
cscale <- function(v) rgb(v,0,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
dev.off()
png("green.jpg")
cscale <- function(v) rgb(0,v,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
dev.off()
png("blue.jpg")
cscale <- function(v) rgb(0,0,v)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
dev.off()
plot(image)
plot(image,axes=FALSE)
plot(image,axes=FALSE)
par(mfrow=c(1,1))
svd1<-svd(scale(grayscale(image)))
plot(image,axes=FALSE)
plot(svd1$d^2/sum(svd1$d^2),axes=TRUE)
dev.off()
plot(svd1$d^2/sum(svd1$d^2),axes=TRUE)
par(mfrow=c(1,3),mar=c(1,1,1,1))
cscale <- function(v) rgb(v,0,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
par(mfrow=c(3,1),mar=c(1,1,1,1))
cscale <- function(v) rgb(v,0,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
cscale <- function(v) rgb(0,v,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
setwd("C:\\Users\\himank\\Documents\\R\\myimagereduction")
library(imager)
image<-load.image("flower.jpg")
par(mfrow=c(1,1))
plot(image,axes=FALSE)
svd1<-svd(scale(grayscale(image)))
dev.off()
plot(svd1$d^2/sum(svd1$d^2),axes=TRUE)
R = image[,,1]
G = image[,,2]
B = image[,,3]
par(mfrow=c(3,1),mar=c(1,1,1,1))
cscale <- function(v) rgb(v,0,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
cscale <- function(v) rgb(0,v,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
cscale <- function(v) rgb(0,0,v)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
svdR<-svd(R)
svdG<-svd(G)
svdB<-svd(B)
svdRGB<-list(svdR,svdG,svdB)
par(mfrow=c(2,2),mar=c(1,1,1,1))
for(j in c(5,10,25,50)){
comp <- sapply(svdRGB, function(i){
compressed = i$u[,1:j] %*% diag(i$d[1:j]) %*% t(i$v[,1:j])
}, simplify = 'array')
comp<-as.cimg(comp)
plot(comp,axes=FALSE)
}
png("red.jpg")
cscale <- function(v) rgb(v,0,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
dev.off()
png("green.jpg")
cscale <- function(v) rgb(0,v,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
dev.off()
png("blue.jpg")
cscale <- function(v) rgb(0,0,v)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
dev.off()
setwd("C:\\Users\\himank\\Documents\\R\\myimagereduction")
library(imager)
image<-load.image("flower.jpg")
par(mfrow=c(1,1))
plot(image,axes=FALSE)
svd1<-svd(scale(grayscale(image)))
dev.off()
plot(svd1$d^2/sum(svd1$d^2),axes=TRUE)
R = image[,,1]
G = image[,,2]
B = image[,,3]
par(mfrow=c(3,1),mar=c(1,1,1,1))
cscale <- function(v) rgb(v,0,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
cscale <- function(v) rgb(0,v,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
cscale <- function(v) rgb(0,0,v)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
svdR<-svd(R)
svdG<-svd(G)
svdB<-svd(B)
svdRGB<-list(svdR,svdG,svdB)
par(mfrow=c(2,2),mar=c(1,1,1,1))
for(j in c(5,10,25,50)){
comp <- sapply(svdRGB, function(i){
compressed = i$u[,1:j] %*% diag(i$d[1:j]) %*% t(i$v[,1:j])
}, simplify = 'array')
comp<-as.cimg(comp)
plot(comp,axes=FALSE,main=paste("rank=",j))
}
png("red.jpg")
cscale <- function(v) rgb(v,0,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
dev.off()
png("green.jpg")
cscale <- function(v) rgb(0,v,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
dev.off()
png("blue.jpg")
cscale <- function(v) rgb(0,0,v)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
dev.off()
png("color_compressed.png")
for(j in c(5,10,25,50)){
comp <- sapply(svdRGB, function(i){
compressed = i$u[,1:j] %*% diag(i$d[1:j]) %*% t(i$v[,1:j])
}, simplify = 'array')
comp<-as.cimg(comp)
plot(comp,axes=FALSE,main=paste("rank=",j))
}
setwd("C:\\Users\\himank\\Documents\\R\\myimagereduction")
library(imager)
image<-load.image("flower.jpg")
par(mfrow=c(1,1))
plot(image,axes=FALSE)
svd1<-svd(scale(grayscale(image)))
dev.off()
plot(svd1$d^2/sum(svd1$d^2),axes=TRUE)
R = image[,,1]
G = image[,,2]
B = image[,,3]
par(mfrow=c(3,1),mar=c(1,1,1,1))
cscale <- function(v) rgb(v,0,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
cscale <- function(v) rgb(0,v,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
cscale <- function(v) rgb(0,0,v)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
svdR<-svd(R)
svdG<-svd(G)
svdB<-svd(B)
svdRGB<-list(svdR,svdG,svdB)
par(mfrow=c(2,2),mar=c(1,1,1,1))
for(j in c(5,10,25,50)){
comp <- sapply(svdRGB, function(i){
compressed = i$u[,1:j] %*% diag(i$d[1:j]) %*% t(i$v[,1:j])
}, simplify = 'array')
comp<-as.cimg(comp)
plot(comp,axes=FALSE,main=paste("rank=",j))
}
png("red.jpg")
cscale <- function(v) rgb(v,0,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
dev.off()
png("green.jpg")
cscale <- function(v) rgb(0,v,0)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
dev.off()
png("blue.jpg")
cscale <- function(v) rgb(0,0,v)
grayscale(image) %>% plot(colourscale=cscale,rescale=FALSE,axes=FALSE)
dev.off()
png("color_compressed.png")
for(j in c(5,10,25,50)){
comp <- sapply(svdRGB, function(i){
compressed = i$u[,1:j] %*% diag(i$d[1:j]) %*% t(i$v[,1:j])
}, simplify = 'array')
comp<-as.cimg(comp)
plot(comp,axes=FALSE,main=paste("rank=",j))
}
dev.off()
Eratosthenes(10)
#2)
Eratosthenes<-function(n){
for(j in 2:n)
{
flag=1
for(k in 2:(j/2)){
if(j%%k==0){flag=0
break
}
}
if(flag==1){print(j)}
}
}
Eratosthenes(10)
